[project]
dynamic = ["version"]
name = "discord-github-utils"
description = "Discord bot providing useful GitHub-related commands."
authors = [
    { name="object-Object" }
]
readme = "README.md"
license = { file="LICENSE" }
requires-python = ">=3.12"

[tool.rye]
managed = true
virtual = true
dev-dependencies = [
    "ruff~=0.4.10",
    "pre-commit",
]

[tool.rye.workspace]
members = [
    "bot",
    "common",
    "infrastructure",
]

[tool.hatch.version]
source = "regex"
path = "common/src/ghutils_common/__version__.py"

[tool.ruff]
extend-exclude = [
    "**/venv",
    "**/.*",
    "**/node_modules",
    "**/__pycache__",
]

[tool.ruff.lint]
preview = true
extend-select = [
    "I", # import sorting
    "RUF022", # __all__ sorting
]
extend-ignore = [
    # covered by Pyright
    "F821", # undefined variable
    "F401", # imported but unused
    "F841", # unused variable
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = [
    "ghutils_*",
]

[tool.pyright]
pythonVersion = "3.12"
pythonPlatform = "All"

include = [
    "*/src",
]
exclude = [
    "**/venv",
    "**/.*",
    "**/node_modules",
    "**/__pycache__",
]

typeCheckingMode = "basic"

enableExperimentalFeatures = true
strictDictionaryInference = true
strictListInference = true
strictSetInference = true

reportAssertAlwaysTrue = "error"
reportConstantRedefinition = "error"
reportDeprecated = "error"
reportFunctionMemberAccess = "error"
reportIncompatibleMethodOverride = "error"
reportIncompatibleVariableOverride = "error"
reportIncompleteStub = "error"
reportInconsistentConstructor = "error"
reportInvalidStringEscapeSequence = "error"
reportInvalidStubStatement = "error"
reportInvalidTypeVarUse = "error"
reportMatchNotExhaustive = "error"
reportMissingParameterType = "error"
reportOverlappingOverload = "error"
reportSelfClsParameterName = "error"
reportTypeCommentUsage = "error"
reportUnknownParameterType = "error"
reportUnnecessaryCast = "error"
reportUnnecessaryContains = "error"
reportUnsupportedDunderAll = "error"
reportUntypedBaseClass = "error"
reportUntypedClassDecorator = "error"
reportUntypedFunctionDecorator = "error"
reportUntypedNamedTuple = "error"
reportWildcardImportFromLibrary = "error"

reportMissingTypeArgument = "warning"
reportPrivateUsage = "warning"
reportUnknownArgumentType = "warning"
reportUnknownLambdaType = "warning"
reportUnknownMemberType = "warning"
reportUnknownVariableType = "warning"
reportUnnecessaryComparison = "warning"
reportUnnecessaryIsInstance = "warning"
reportUnusedClass = "warning"
reportUnusedExpression = "warning"
reportUnusedFunction = "warning"
reportUnusedImport = "warning"
reportUnusedVariable = "warning"

reportMissingTypeStubs = "none"
reportDuplicateImport = "none"
